// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PW3.Emoji.Entidades.EF;

#nullable disable

namespace PW3.Emoji.Entidades.Migrations
{
    [DbContext(typeof(PW3_EmojiContext))]
    [Migration("20251027225810_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.AnalisisResultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Confianza")
                        .HasColumnType("float");

                    b.Property<int>("EmocionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAnalisis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<int>("ImagenId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("VectorJson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Analisis__3214EC07E3FD976B");

                    b.HasIndex(new[] { "EmocionId" }, "IX_Analisis_EmocionId");

                    b.HasIndex(new[] { "ImagenId" }, "IX_Analisis_ImagenId");

                    b.HasIndex(new[] { "UsuarioId" }, "IX_Analisis_UsuarioId");

                    b.ToTable("AnalisisResultado");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Emocion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Emocion__3214EC0709188CAD");

                    b.HasIndex(new[] { "Nombre" }, "UQ_Emocion_Nombre")
                        .IsUnique();

                    b.ToTable("Emocion");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Emoji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodigoUnicode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Emoji__3214EC07EBBB0A7D");

                    b.ToTable("Emoji");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Imagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Alto")
                        .HasColumnType("int");

                    b.Property<int?>("Ancho")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSubida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Imagen__3214EC0739CCA6A4");

                    b.HasIndex(new[] { "UsuarioId" }, "IX_Imagen_UsuarioId");

                    b.ToTable("Imagen");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.MapeoEmocionEmoji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmocionId")
                        .HasColumnType("int");

                    b.Property<int>("EmojiId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__MapeoEmo__3214EC075C79F2E8");

                    b.HasIndex("EmojiId");

                    b.HasIndex(new[] { "EmocionId" }, "UQ_Mapeo_EmocionId")
                        .IsUnique();

                    b.ToTable("MapeoEmocionEmoji");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Rol__3214EC077CE478FD");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Usuario__3214EC07EBC80A05");

                    b.HasIndex("RolId");

                    b.HasIndex(new[] { "Email" }, "UQ_Usuario_Email")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.AnalisisResultado", b =>
                {
                    b.HasOne("PW3.Emoji.Entidades.EF.Emocion", "Emocion")
                        .WithMany("AnalisisResultado")
                        .HasForeignKey("EmocionId")
                        .IsRequired()
                        .HasConstraintName("FK_Analisis_Emocion");

                    b.HasOne("PW3.Emoji.Entidades.EF.Imagen", "Imagen")
                        .WithMany("AnalisisResultado")
                        .HasForeignKey("ImagenId")
                        .IsRequired()
                        .HasConstraintName("FK_Analisis_Imagen");

                    b.HasOne("PW3.Emoji.Entidades.EF.Usuario", "Usuario")
                        .WithMany("AnalisisResultado")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Analisis_Usuario");

                    b.Navigation("Emocion");

                    b.Navigation("Imagen");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Imagen", b =>
                {
                    b.HasOne("PW3.Emoji.Entidades.EF.Usuario", "Usuario")
                        .WithMany("Imagen")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Imagen_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.MapeoEmocionEmoji", b =>
                {
                    b.HasOne("PW3.Emoji.Entidades.EF.Emocion", "Emocion")
                        .WithOne("MapeoEmocionEmoji")
                        .HasForeignKey("PW3.Emoji.Entidades.EF.MapeoEmocionEmoji", "EmocionId")
                        .IsRequired()
                        .HasConstraintName("FK_Mapeo_Emocion");

                    b.HasOne("PW3.Emoji.Entidades.EF.Emoji", "Emoji")
                        .WithMany("MapeoEmocionEmoji")
                        .HasForeignKey("EmojiId")
                        .IsRequired()
                        .HasConstraintName("FK_Mapeo_Emoji");

                    b.Navigation("Emocion");

                    b.Navigation("Emoji");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Usuario", b =>
                {
                    b.HasOne("PW3.Emoji.Entidades.EF.Rol", "Rol")
                        .WithMany("Usuario")
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Rol");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Emocion", b =>
                {
                    b.Navigation("AnalisisResultado");

                    b.Navigation("MapeoEmocionEmoji");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Emoji", b =>
                {
                    b.Navigation("MapeoEmocionEmoji");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Imagen", b =>
                {
                    b.Navigation("AnalisisResultado");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Rol", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PW3.Emoji.Entidades.EF.Usuario", b =>
                {
                    b.Navigation("AnalisisResultado");

                    b.Navigation("Imagen");
                });
#pragma warning restore 612, 618
        }
    }
}
